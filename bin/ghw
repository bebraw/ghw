#!/usr/bin/env node
var VERSION = '0.6.5';

var path = require('path');
var fs = require('fs');
var mu = require('mu2');
var ghw = require('../');

var program = require('commander');

console.log('ghw ' + VERSION + '\n');

program.
    version(VERSION).
    option('-c --config <json file>', 'configuration file').
    option('-t --templates <template>', 'template directory').
    option('-i --input <input>', 'input (file/directory)').
    option('-o --output <output>', 'output directory').
    option('-s --silent', 'silent').
    parse(process.argv);

if (!program.templates) quit('Missing template directory');
if (!program.input) quit('Missing input');
if (!program.output) quit('Missing output');

var baseTemplate = path.join(program.templates, 'base.html');
var silent = program.silent;
var conf = program.config? JSON.parse(fs.readFileSync(program.config, 'utf-8')): {};

path.exists(baseTemplate, function(exists) {
    exists? main(): quit('Template directory is missing base.html'); 
}); 

function main() {
    if(!path.existsSync(program.output)) {
        fs.mkdirSync(program.output);
    }   

    var stats = fs.statSync(program.input);
    if(stats.isFile()) {
        ghw.transform(program.input, ghw.transformers, partial(proc, baseTemplate, program.output, silent, conf));
    }   
    if(stats.isDirectory()) {
        var files = fs.readdirSync(program.input);

        files.forEach(function (file) {
            var p = path.join(program.input, file);
            var stats = fs.statSync(p);

            if(stats.isFile()) {
                ghw.transform(p, ghw.transformers, partial(proc, baseTemplate, program.output, silent, conf));
            }   
        });

        fs.renameSync(path.join(program.output, 'home.html'), path.join(program.output, 'index.html'));
    }
}

function proc(t, o, silent, conf, f, ctx) {
    conf.pageName = path.basename(f, '.md');
    var stream = mu.compileAndRender(t, merge(conf, ctx));
    var target = path.join(o, path.basename(f, '.md').toLowerCase() + '.html');
    var writeStream = fs.createWriteStream(target);

    stream.pipe(writeStream);
    stream.on('end', function() {
        if(!silent) console.log('Wrote ' + target);
    });
}

// http://stackoverflow.com/questions/171251/how-can-i-merge-properties-of-two-javascript-objects-dynamically
function merge(obj1, obj2){
    var obj3 = {};
    for (var attrname in obj1) { obj3[attrname] = obj1[attrname]; }
    for (var attrname in obj2) { obj3[attrname] = obj2[attrname]; }
    return obj3;
}

function quit(msg) {
    console.log(msg);
    process.exit();
}   

// http://stackoverflow.com/questions/4394747/javascript-curry-function
function partial(fn) {
    var slice = Array.prototype.slice;
    var args = slice.apply(arguments, [1]);

    return function() {
        return fn.apply(null, args.concat(slice.apply(arguments)));
    };
}

